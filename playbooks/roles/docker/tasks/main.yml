- name: Check if docker-ce is installed
  ansible.builtin.package_facts:
    manager: auto

- name: Install Docker
  when: "'docker-ce' not in ansible_facts.packages"
  block:
    - name: Install Docker required packages
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
        state: present
        update_cache: true

    - name: Create directory for Docker's GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
        force: true

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ docker_arch_mapping[ansible_architecture] }}
          signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker if not already installed
      ansible.builtin.apt:
        name: "{{ docker_packages }}"
        state: present
        update_cache: true
      notify:
        - Start and enable docker service

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ docker_user }}"
        groups: docker
        append: true
      become: true

- name: Create .docker directory if it does not exist
  ansible.builtin.file:
    path: "/home/{{ docker_user }}/.docker"
    state: directory
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: "0775"

- name: Create config.json file in $HOME/.docker/ directory
  ansible.builtin.template:
    src: config.json.j2
    dest: "/home/{{ docker_user }}/.docker/config.json"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: "0664"
